{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../core/services/pricing.service\";\nimport * as i3 from \"@angular/common\";\nexport let CalculatorComponent = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class CalculatorComponent {\n    constructor(fb, pricing) {\n      this.fb = fb;\n      this.pricing = pricing;\n      this.baseRate = 86.84;\n      this.tiers = [];\n      this.result = {\n        gross: 0,\n        fee: 0,\n        gst: 0,\n        net: 0,\n        savedAgainstBank: 0\n      };\n      this.form = this.fb.group({\n        amount: [500],\n        currency: ['USD'],\n        pricingModel: ['tier']\n      });\n    }\n    ngOnInit() {\n      this.pricing.getRate('USD/INR').subscribe(r => this.baseRate = r.rate);\n      this.pricing.getPricingTiers().subscribe(t => this.tiers = t);\n      this.form.valueChanges.subscribe(() => this.calculate());\n      this.calculate();\n    }\n    calculate() {\n      const v = this.form.value;\n      const amount = Number(v.amount) || 0;\n      const gross = amount * this.baseRate;\n      if (v.pricingModel === 'zeromargin') {\n        const feePercent = 1.0;\n        const fee = feePercent / 100 * gross;\n        const gst = fee * 0.18;\n        const net = gross - fee - gst;\n        this.result = {\n          gross,\n          fee,\n          gst,\n          net,\n          savedAgainstBank: gross * 0.03\n        };\n      } else {\n        const tier = this.tiers.find(t => t.max === null ? amount >= t.min : amount >= t.min && amount <= t.max);\n        let fee = 0;\n        if (tier) {\n          fee = tier.feeType === 'flat' ? tier.fee : tier.fee / 100 * amount;\n        } else {\n          fee = 29;\n        }\n        const feeINR = fee * this.baseRate;\n        const gst = feeINR * 0.18;\n        const net = gross - feeINR - gst;\n        this.result = {\n          gross,\n          fee: feeINR,\n          gst,\n          net,\n          savedAgainstBank: gross * 0.05\n        };\n      }\n    }\n    static #_ = _staticBlock = () => (this.ɵfac = function CalculatorComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CalculatorComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PricingService));\n    }, this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CalculatorComponent,\n      selectors: [[\"app-calculator\"]],\n      standalone: false,\n      decls: 30,\n      vars: 21,\n      consts: [[1, \"p-4\", \"border\", \"rounded\", \"bg-white\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"block\", \"text-sm\"], [\"formControlName\", \"amount\", \"type\", \"number\", 1, \"w-full\", \"p-2\", \"mt-1\", \"border\", \"rounded\"], [1, \"block\", \"text-sm\", \"mt-3\"], [\"formControlName\", \"pricingModel\", 1, \"w-full\", \"p-2\", \"mt-1\", \"border\", \"rounded\"], [\"value\", \"tier\"], [\"value\", \"zeromargin\"], [1, \"mt-4\", \"text-sm\"], [1, \"mt-4\", \"p-3\", \"bg-gray-50\", \"rounded\"], [1, \"text-xs\"], [1, \"text-2xl\", \"font-semibold\"], [1, \"mt-2\", \"text-sm\", \"text-gray-600\"], [1, \"mt-2\", \"text-sm\", \"text-green-600\"]],\n      template: function CalculatorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function CalculatorComponent_Template_form_ngSubmit_1_listener($event) {\n            return $event.preventDefault();\n          });\n          i0.ɵɵelementStart(2, \"label\", 2);\n          i0.ɵɵtext(3, \"Invoice Amount (USD)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"input\", 3);\n          i0.ɵɵelementStart(5, \"label\", 4);\n          i0.ɵɵtext(6, \"Pricing model\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"select\", 5)(8, \"option\", 6);\n          i0.ɵɵtext(9, \"Flat / Tiered (Skydo)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"option\", 7);\n          i0.ɵɵtext(11, \"Zero Forex Markup (Mulya)\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"div\", 8);\n          i0.ɵɵtext(13, \"Live FX rate: \");\n          i0.ɵɵelementStart(14, \"strong\");\n          i0.ɵɵtext(15);\n          i0.ɵɵpipe(16, \"number\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"div\", 9)(18, \"div\", 10);\n          i0.ɵɵtext(19, \"You'll receive in Bank\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"div\", 11);\n          i0.ɵɵtext(21);\n          i0.ɵɵpipe(22, \"number\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"div\", 12);\n          i0.ɵɵtext(24);\n          i0.ɵɵpipe(25, \"number\");\n          i0.ɵɵpipe(26, \"number\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"div\", 13);\n          i0.ɵɵtext(28);\n          i0.ɵɵpipe(29, \"number\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(14);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(16, 6, ctx.baseRate, \"1.2-2\"));\n          i0.ɵɵadvance(6);\n          i0.ɵɵtextInterpolate1(\"\\u20B9 \", i0.ɵɵpipeBind2(22, 9, ctx.result.net, \"1.2-2\"));\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate2(\"Fee: \\u20B9 \", i0.ɵɵpipeBind2(25, 12, ctx.result.fee, \"1.2-2\"), \" \\u2022 GST: \\u20B9 \", i0.ɵɵpipeBind2(26, 15, ctx.result.gst, \"1.2-2\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\"Estimated annual saving: \\u20B9 \", i0.ɵɵpipeBind2(29, 18, ctx.result.savedAgainstBank, \"1.2-2\"));\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.DecimalPipe],\n      encapsulation: 2\n    }));\n  }\n  _staticBlock();\n  return CalculatorComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}