{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let AuthService = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class AuthService {\n    constructor() {\n      this.storageKey = 'stradux:isLoggedIn';\n      this.loggedIn$ = new BehaviorSubject(this.readPersisted());\n    }\n    get isLoggedIn$() {\n      return this.loggedIn$.asObservable();\n    }\n    get isLoggedIn() {\n      return this.loggedIn$.value;\n    }\n    login() {\n      this.loggedIn$.next(true);\n      localStorage.setItem(this.storageKey, 'true');\n    }\n    logout() {\n      this.loggedIn$.next(false);\n      localStorage.removeItem(this.storageKey);\n    }\n    readPersisted() {\n      return localStorage.getItem(this.storageKey) === 'true';\n    }\n    static #_ = _staticBlock = () => (this.ɵfac = function AuthService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthService)();\n    }, this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    }));\n  }\n  _staticBlock();\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}